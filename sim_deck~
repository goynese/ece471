
* Power Supply Voltage
* Voltage_Node_Name 'NODE_VDD' 'GROUND' 'VARIABLE_SUPPLY'
* 'sup' is a variable you set to adjust the supply voltage

Vvdd vdd 0 'sup'
Vgnd gnd 0 0

* Value of the power supply. 2.5V(0.25um); 1.8V(0.18um); 1.2V(0.13um); 1.0V(90nm, 65nm); 0.9V(32nm)
.param sup=2.5

* Include the netlist into the simulation
* For example, 'inverter_sch.spi' (inverter schematic)
* For example, 'inverter_lay.spi' (inverter layout)
* You MUST get rid of the .end statement
.include './inverter.spi'

* The format for the transistor is:
* TRANSISTOR_NAME DRAIN GATE SOURCE BULK
* P_18_MM refers to 0.18um-PMOS device; P_18_MM=>NMOS 
* L=length; W=width; AD=Area of Drain; AS=Area of Source; PD=Perimeter of Drain; PS=Perimeter of source; 
* M=multiplier, # of transistors in parallel

* Input pulse into the inverter
* Adjust the rise/fall times if simulating faster processes
* Voltage pulse to drive in the input of the inverter with a square wave signal
* Vin=voltage_node_name; 'in'=positive terminal; '0'=negative terminal (0 is always GROUND)
* pulse=>defines a pulse-type waveform
* (0 'sup' is 0->1 transition
* 1ns is delay at which 0->1 transition occurs
* 200p => rise_time (0 to 100%)
* 200p => fall_time (100% to 0%)
* 5n   => period of the waveform
Vin in 0 pulse(0 'sup' 1n 200p 200p 5n)

* .measure statements, which can directly measure the values: tphl/tplh 
* you will need to add some more of these yourself to measure trise,tfall,power_avg
* This measure statements will help you AUTOMATICALLY determine the tphl (high-to-low propagation speed)
* and tplh 

.measure tran tphl TRIG v(in) val='sup/2' rise=1
+                   TARG v(out) val='sup/2' fall=1

.measure tran tplh TRIG v(in) val='sup/2' fall=1
+                   TARG v(out) val='sup/2' rise=1

* This isn't exact.  please modify
*.measure tran iavg I(vdd) start=1ns finish=10ns
* add some of your measures trise/tfall, 


* Add these files if simulating 0.25um technology 
  
*.lib "/nfs/guille/u1/c/cdsmgr/cdsmgr/pdk/CDK1.4/local/models/hspice/public/publicModel/tsmc25dN" NMOS 
*.lib "/nfs/guille/u1/c/cdsmgr/cdsmgr/pdk/CDK1.4/local/models/hspice/public/publicModel/tsmc25dP" PMOS 

* Add these files if simulation 0.18um technology
* .include '130nm_process_TT.lib
* Where 'TT" is using the typical NMOS, PMOS device corners
*.lib "/nfs/farm/u4/p/postmaja/ece471/ECE472/18um_hspiceFiles/MM180_REG18_V122.lib" TT

* Add these files if simulation 0.13um technology
* .include '130nm_process_TT.lib

* Add these files if simulation 0.32um technology
*.include "./32nm_process_TT.lib"

* Simulation control statements
.options list node post
+ accurate

* 10ps=minimum time step; 20ns=duration of the transient simulation
.tran 10p 20n

* Allows you to sweep a dc voltage parameter
*.dc

.end 
